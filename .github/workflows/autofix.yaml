# Copyright Â© SixtyFPS GmbH <info@slint.dev>
# SPDX-License-Identifier: MIT

name: autofix.ci  # needed to securely identify the workflow

on:
  pull_request:
    branches: [master, "feature/*"]
  push:
    branches: [master, "feature/*"]
  workflow_dispatch:

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref || github.run_id }}
  cancel-in-progress: true

env:
    CARGO_INCREMENTAL: false
    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
    format_fix:
        runs-on: ubuntu-24.04
        timeout-minutes: 15
        steps:
            - uses: actions/checkout@v4
            - uses: jdx/mise-action@v2
              with:
                log_level: debug
            - name: Run fixes
              run: mise run --force --jobs=1 'ci:autofix:all'
            - name: Format, lint and REUSE check
              uses: autofix-ci/action@635ffb0c9798bd160680f18fd73371e355b85f27

    changes:
      runs-on: ubuntu-latest
      needs: [format_fix]
      permissions:
        pull-requests: read
      outputs:
        deploy: ${{ steps.filter.outputs.deploy }}
      steps:
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
              deploy:
                - 'docs/**'

    deploy:
      runs-on: ubuntu-latest
      permissions:
        contents: read
        deployments: write
      name: Deploy to Cloudflare Pages
      needs: [changes]
      if: ${{ needs.changes.outputs.deploy == 'true' }}
      defaults:
        run:
          working-directory: docs
      steps:
        - name: Checkout
          uses: actions/checkout@v4
        - uses: pnpm/action-setup@v4.1.0
          with:
            version: 10.12.1
        - name: Install dependencies
          run: pnpm install --frozen-lockfile
        - name: Build
          run: pnpm build
        - name: Deploy
          uses: cloudflare/wrangler-action@v3
          with:
            apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
            accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
            command: pages deploy docs/dist --project-name=materialui
            gitHubToken: ${{ secrets.GITHUB_TOKEN }}

